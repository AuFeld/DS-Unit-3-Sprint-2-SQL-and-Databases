# -*- coding: utf-8 -*-
"""insert_titanic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TbrD4ORzK-_HkhP4X7L7E7XKGQf7PCLP
"""

!pip install psycopg2-binary

import psycopg2

dbname = 'mtaecnwq'
user = 'mtaecnwq'
password = '75_a5ufMPXsvE74tsA80mfGsITA4P1Jn'  
host = 'rajje.db.elephantsql.com'

pg_conn = psycopg2.connect(dbname=dbname, user=user,
                           password=password, host=host)

!wget https://raw.githubusercontent.com/AuFeld/DS-Unit-3-Sprint-2-SQL-and-Databases/master/module2-sql-for-analysis/titanic.csv

import sqlite3
sl_conn = sqlite3.connect('titanic.db')

"""# Objective 1: Create a Database in Python using sqlite3"""

c = conn.cursor() # The database will be saved in the location where your 'py' file is saved

# Create table - PASSENGERS
c.execute('''CREATE TABLE PASSENGERS
             ([generated_id] INTEGER PRIMARY KEY, [Name] text, 
             [Survived] integer, [Pclass] integer, [Sex] text, 
             [AGE] integer. [Siblings/Spouses Aboard] integer, 
             [Parents/Children Aboard] integer, [Fare] float)''')
          
                 
conn.commit()

# Note that the syntax to create new tables should only be used once in the code (unless you dropped the table/s at the end of the code). 
# The [generated_id] column is used to set an auto-increment ID for each record
# When creating a new table, you can add both the field names as well as the field formats (e.g., Text)

"""# Objective 2: Import the Data using Pandas"""

import sqlite3
import pandas as pd
from pandas import DataFrame

conn = sqlite3.connect('titanic.db')  
c = conn.cursor()

read_passengers = pd.read_csv(r'https://raw.githubusercontent.com/AuFeld/DS-Unit-3-Sprint-2-SQL-and-Databases/master/module2-sql-for-analysis/titanic.csv')
read_passengers.to_sql('PASSENGERS', conn, if_exists='append', index = False) # Insert the values from the csv file into the table 'PASSENGERS' 

# When reading the csv:
# - Place 'r' before the path string to read any special characters, such as '\'
# - Don't forget to put the file name at the end of the path + '.csv'
# - Before running the code, make sure that the column names in the CSV files match with the column names in the tables created and in the query below
# - If needed make sure that all the columns are in a TEXT format

c.execute(
'''CREATE TABLE PASSENGERS
             ([Generated_ID] INTEGER PRIMARY KEY, [Name] text, 
             [Survived] integer, [Pclass] integer, [Sex] text, 
             [AGE] integer. [Siblings/Spouses Aboard] integer, 
             [Parents/Children Aboard] integer, [Fare] float)
          ''')
   
#print(c.fetchall())

df = DataFrame(c.fetchall(), columns=['Generated_ID','Name','Survived', 
                                      'Pclass', 'Sex', 'Age', 
                                      'Siblings/Spouses Aboard', 
                                      'Parents/Children Aboard', 'Fare'])
print (df) # To display the results after an insert query, you'll need to add this type of syntax above: 'c.execute(''' SELECT * from latest table ''')

df.to_sql('DAILY_STATUS', conn, if_exists='append', index = False) # Insert the values from the INSERT QUERY into the table 'DAILY_STATUS'

# export_csv = df.to_csv(r'https://raw.githubusercontent.com/AuFeld/DS-Unit-3-Sprint-2-SQL-and-Databases/master/module2-sql-for-analysis/titanic.csv', index = None, header=True) 
# Uncomment the above syntax if you wish to export the results to CSV. Make sure to adjust the path name
# Don't forget to add '.csv' at the end of the path (as well as r at the beg to address special characters)